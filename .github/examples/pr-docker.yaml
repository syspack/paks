# This is an example of running both docker checks on a PR, and
# printing the output to the console

name: Docker Updates
on: [pull_request]

jobs:
  test:
    name: Test Dockerfile Parsers
    runs-on: ubuntu-latest
    outputs:
      dockerfile_matrix: ${{ steps.dockerfile_check.outputs.dockerfile_matrix }}
      dockerhierarchy_matrix: ${{ steps.dockerhierarchy_check.outputs.dockerhierarchy_matrix }}
      dockerfilelist_matrix: ${{ steps.dl_list.outputs.dockerfilelist_matrix }}
      dockerbuild_matrix: ${{ steps.dbuild.outputs.dockerbuild_matrix }}
    steps:
    - name: Checkout Actions Repository
      uses: actions/checkout@v2
    - name: Test dockerfile uptodate GitHub Action
      uses: ./
      id: dockerfile_check
      with: 
        root: ./tests
        parser: dockerfile

    - name: Test dockerhierarchy uptodate GitHub Action
      uses: ./
      id: dockerhierarchy_check
      with: 
        root: ./tests
        parser: dockerhierarchy

    - name: Test docker build uptodate GitHub Action
      uses: ./
      id: dbuild
      with: 
        root: ./tests
        parser: dockerbuild

    - name: Test dockerfile list uptodate GitHub Action
      uses: ./
      id: dockerfilelist_check
      with: 
        root: ./tests
        parser: dockerfilelist

  view:
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Check Dockerfile result
        env:
          result: ${{ needs.test.outputs.dockerfile_matrix }}
        run: echo ${result}

      - name: Check Docker Hierarchy Result
        env:
          result: ${{ needs.test.outputs.dockerhierarchy_matrix }}
        run: echo ${result}
        
      - name: Check Docker Build Result
        env:
          result: ${{ needs.test.outputs.dockerbuild_matrix }}
        run: echo ${result}
        
      - name: Check Dockerfile result
        env:
          result: ${{ needs.test.outputs.dockerfilelist_matrix }}
        run: echo ${result}
